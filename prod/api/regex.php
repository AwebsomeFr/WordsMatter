<?php $regex = [ [ 'desc' => '/\s{2}\n/', 'output' => function ($ct) { return '<br/>'; } ], [ 'desc' => '/\\\_/', 'output' => function () { return '```'; } ], [ 'desc' => '/^(?!3_|4_|5_|6_|_\s|__\s|\!\[[^\]]+\]\([^\)]+\)).+$/m', 'output' => function ($ct) { return '<p>' . $ct[0] . '</p>'; } ], [ 'desc' => '/^(3|4|5|6)_(?!\s).+/m', 'output' => function ($ct) { return '<h' . $ct[0][0] . '>' . substr($ct[0], 2) . '</h' . $ct[0][0] . '>'; } ], [ 'desc' => '/\!\[[^\]]+\]\([^\)]+\)/', 'output' => function ($ct) { $dt = explode('](', substr($ct[0], 2, -1)); $dt[0] = explode('|', $dt[0]); return count($dt[0]) > 1 ? '<figure>' . '<img loading="lazy" src="' . $dt[1] . '" alt="' . $dt[0][0] . '" />' . '<figcaption>' . $dt[0][1] . '</figcaption>' . '</figure>' : '<img loading="lazy" src="' . $dt[1] . '" alt="' . $dt[0][0] . '" />'; } ], [ 'desc' => '/\[[^\]]+\]\([^\)]+\)/', 'output' => function ($ct) { $dt = explode('](', substr($ct[0], 1, -1)); return '<a href="' . $dt[1] . '">' . $dt[0] . '</a>'; } ], [ 'desc' => '/(^__\s.*\n){1,}/m', 'output' => function ($ct) { return '<ol>' . $ct[0] . '</ol>'; } ], [ 'desc' => '/^(<ol>)?__\s.+/m', 'output' => function ($ct) { return strpos($ct[0], '<ol>__') === 0 ? '<ol><li>' . substr($ct[0], 7) . '</li>' : '<li>' . substr($ct[0], 3) . '</li>'; } ], [ 'desc' => '/(^_\s.*\n){1,}/m', 'output' => function ($ct) { return '<ul>' . $ct[0] . '</ul>'; } ], [ 'desc' => '/^(<ul>)?_\s.+/m', 'output' => function ($ct) { return strpos($ct[0], '<ul>_') === 0 ? '<ul><li>' . substr($ct[0], 6) . '</li>' : '<li>' . substr($ct[0], 2) . '</li>'; } ], [ 'desc' => '/(__)(?!\s)(.+?[_]*)\1/', 'output' => function ($ct) { return '<strong>' . substr($ct[0], 2, -2) . '</strong>'; } ], [ 'desc' => '/(_)(?!\s)(.+?)\1/', 'output' => function ($ct) { return '<em>' . substr($ct[0], 1, -1) . '</em>'; } ], [ 'desc' => '/```/', 'output' => function () { return '_'; } ] ];